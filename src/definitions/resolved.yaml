openapi: 3.0.3
servers:
  - url: https://f-budget-api.nos.sh
info:
  description: This is a documentation for f-budget-api
  x-locale: fr_CA
  version: 0.0.1
  title: api
  termsOfService: http://swagger.io/terms/
  contact:
    email: markgagnon28@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
paths:
  /auth:
    post:
      tags:
        - Auth
      operationId: login
      summary: Login
      requestBody:
        $ref: '#/components/requestBodies/LoginRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/LoginResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /auth/refresh:
    get:
      tags:
        - Auth
      operationId: refreshToken
      summary: Refresh JWT token
      responses:
        '200':
          $ref: '#/components/responses/RefreshResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /user:
    post:
      tags:
        - User
      operationId: userCreate
      summary: Creates a new User
      description: Creates a new User
      security:
        - E2E: []
      requestBody:
        $ref: '#/components/requestBodies/UserCreateRequestBody'
      parameters:
        - $ref: '#/components/parameters/IsUserDryRun'
      responses:
        '200':
          $ref: '#/components/responses/UserCreateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /user-all:
    post:
      tags:
        - User
      operationId: userGetAll
      summary: Get all User
      description: Get all User
      security:
        - E2E: []
      parameters:
        - $ref: '#/components/parameters/IsUserArchived'
      responses:
        '200':
          $ref: '#/components/responses/UserGetAllResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /user-search:
    post:
      tags:
        - User
      operationId: userSearch
      summary: Search User
      description: Search User
      security:
        - E2E: []
      requestBody:
        $ref: '#/components/requestBodies/UserSearchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UserSearchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /user/{id}:
    post:
      tags:
        - User
      operationId: userGetById
      summary: Get by Id a User
      description: Get by Id a User
      security:
        - E2E: []
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/UserFindByIdResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    patch:
      tags:
        - User
      operationId: userPatch
      summary: Patch a User
      description: Patch a User
      parameters:
        - $ref: '#/components/parameters/UserId'
      security:
        - E2E: []
      requestBody:
        $ref: '#/components/requestBodies/UserPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UserPatchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    put:
      tags:
        - User
      operationId: userUpdate
      summary: Update a User
      description: Update a User
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/IsUserDryRun'
      security:
        - E2E: []
      requestBody:
        $ref: '#/components/requestBodies/UserUpdateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UserUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    delete:
      tags:
        - User
      operationId: userArchive
      summary: Archive a User
      description: Archive a User
      parameters:
        - $ref: '#/components/parameters/UserId'
      security:
        - E2E: []
      responses:
        '200':
          $ref: '#/components/responses/UserArchiveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /healthcheck:
    get:
      tags:
        - Healthcheck
      operationId: getHealthcheck
      summary: Healthcheck
      description: Returns a ResultHandler with the version number of the current build
      responses:
        '200':
          $ref: '#/components/responses/HealthcheckResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableResultResponse'
  /access-scope:
    post:
      tags:
        - AccessScope
      operationId: accessScopeCreate
      summary: Creates a new AccessScope
      description: Creates a new AccessScope
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/AccessScopeCreateRequestBody'
      parameters:
        - $ref: '#/components/parameters/IsAccessScopeDryRun'
      responses:
        '200':
          $ref: '#/components/responses/AccessScopeCreateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /access-scope-all:
    post:
      tags:
        - AccessScope
      operationId: accessScopeGetAll
      summary: Get all AccessScope
      description: Get all AccessScope
      security:
        - E2E: []
        - Dev: []
      parameters:
        - $ref: '#/components/parameters/IsAccessScopeArchived'
      responses:
        '200':
          $ref: '#/components/responses/AccessScopeGetAllResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /access-scope-search:
    post:
      tags:
        - AccessScope
      operationId: accessScopeSearch
      summary: Search AccessScope
      description: Search AccessScope
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/AccessScopeSearchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/AccessScopeSearchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /access-scope/{id}:
    post:
      tags:
        - AccessScope
      operationId: accessScopeGetById
      summary: Get by Id a AccessScope
      description: Get by Id a AccessScope
      security:
        - E2E: []
        - Dev: []
      parameters:
        - $ref: '#/components/parameters/AccessScopeId'
      responses:
        '200':
          $ref: '#/components/responses/AccessScopeFindByIdResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    patch:
      tags:
        - AccessScope
      operationId: accessScopePatch
      summary: Patch a AccessScope
      description: Patch a AccessScope
      parameters:
        - $ref: '#/components/parameters/AccessScopeId'
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/AccessScopePatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/AccessScopePatchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    put:
      tags:
        - AccessScope
      operationId: accessScopeUpdate
      summary: Update a AccessScope
      description: Update a AccessScope
      parameters:
        - $ref: '#/components/parameters/AccessScopeId'
        - $ref: '#/components/parameters/IsAccessScopeDryRun'
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/AccessScopeUpdateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/AccessScopeUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    delete:
      tags:
        - AccessScope
      operationId: accessScopeArchive
      summary: Archive a AccessScope
      description: Archive a AccessScope
      parameters:
        - $ref: '#/components/parameters/AccessScopeId'
      security:
        - E2E: []
        - Dev: []
      responses:
        '200':
          $ref: '#/components/responses/AccessScopeArchiveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control-link:
    post:
      tags:
        - PropertyControlLink
      operationId: propertyControlLinkCreate
      summary: Creates a new PropertyControlLink
      description: Creates a new PropertyControlLink
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlLinkCreateRequestBody'
      parameters:
        - $ref: '#/components/parameters/IsPropertyControlLinkDryRun'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlLinkCreateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control-link-all:
    post:
      tags:
        - PropertyControlLink
      operationId: propertyControlLinkGetAll
      summary: Get all PropertyControlLink
      description: Get all PropertyControlLink
      parameters:
        - $ref: '#/components/parameters/IsPropertyControlLinkArchived'
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlLinkPopulateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlLinkGetAllResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control-link-search:
    post:
      tags:
        - PropertyControlLink
      operationId: propertyControlLinkSearch
      summary: Search PropertyControlLink
      description: Search PropertyControlLink
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlLinkSearchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlLinkSearchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control-link/{id}:
    post:
      tags:
        - PropertyControlLink
      operationId: propertyControlLinkGetById
      summary: Get by Id a PropertyControlLink
      description: Get by Id a PropertyControlLink
      parameters:
        - $ref: '#/components/parameters/PropertyControlLinkId'
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlLinkPopulateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlLinkFindByIdResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    patch:
      tags:
        - PropertyControlLink
      operationId: propertyControlLinkPatch
      summary: Patch a PropertyControlLink
      description: Patch a PropertyControlLink
      parameters:
        - $ref: '#/components/parameters/PropertyControlLinkId'
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlLinkPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlLinkPatchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    put:
      tags:
        - PropertyControlLink
      operationId: propertyControlLinkUpdate
      summary: Update a PropertyControlLink
      description: Update a PropertyControlLink
      parameters:
        - $ref: '#/components/parameters/PropertyControlLinkId'
        - $ref: '#/components/parameters/IsPropertyControlLinkDryRun'
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlLinkUpdateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlLinkUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    delete:
      tags:
        - PropertyControlLink
      operationId: propertyControlLinkArchive
      summary: Archive a PropertyControlLink
      description: Archive a PropertyControlLink
      parameters:
        - $ref: '#/components/parameters/PropertyControlLinkId'
      security:
        - E2E: []
        - Dev: []
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlLinkArchiveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /access-model:
    post:
      tags:
        - AccessModel
      operationId: accessModelCreate
      summary: Creates a new AccessModel
      description: Creates a new AccessModel
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/AccessModelCreateRequestBody'
      parameters:
        - $ref: '#/components/parameters/IsAccessModelDryRun'
      responses:
        '200':
          $ref: '#/components/responses/AccessModelCreateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /access-model-all:
    post:
      tags:
        - AccessModel
      operationId: accessModelGetAll
      summary: Get all AccessModel
      description: Get all AccessModel
      security:
        - E2E: []
        - Dev: []
      parameters:
        - $ref: '#/components/parameters/IsAccessModelArchived'
      requestBody:
        $ref: '#/components/requestBodies/AccessModelPopulateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/AccessModelGetAllResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /access-model-search:
    post:
      tags:
        - AccessModel
      operationId: accessModelSearch
      summary: Search AccessModel
      description: Search AccessModel
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/AccessModelSearchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/AccessModelSearchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /access-model/{id}:
    post:
      tags:
        - AccessModel
      operationId: accessModelGetById
      summary: Get by Id a AccessModel
      description: Get by Id a AccessModel
      security:
        - E2E: []
        - Dev: []
      parameters:
        - $ref: '#/components/parameters/AccessModelId'
      requestBody:
        $ref: '#/components/requestBodies/AccessModelPopulateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/AccessModelFindByIdResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    patch:
      tags:
        - AccessModel
      operationId: accessModelPatch
      summary: Patch a AccessModel
      description: Patch a AccessModel
      parameters:
        - $ref: '#/components/parameters/AccessModelId'
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/AccessModelPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/AccessModelPatchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    put:
      tags:
        - AccessModel
      operationId: accessModelUpdate
      summary: Update a AccessModel
      description: Update a AccessModel
      parameters:
        - $ref: '#/components/parameters/AccessModelId'
        - $ref: '#/components/parameters/IsAccessModelDryRun'
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/AccessModelUpdateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/AccessModelUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    delete:
      tags:
        - AccessModel
      operationId: accessModelArchive
      summary: Archive a AccessModel
      description: Archive a AccessModel
      parameters:
        - $ref: '#/components/parameters/AccessModelId'
      security:
        - E2E: []
        - Dev: []
      responses:
        '200':
          $ref: '#/components/responses/AccessModelArchiveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control-option:
    post:
      tags:
        - PropertyControlOption
      operationId: propertyControlOptionCreate
      summary: Creates a new PropertyControlOption
      description: Creates a new PropertyControlOption
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlOptionCreateRequestBody'
      parameters:
        - $ref: '#/components/parameters/IsPropertyControlOptionDryRun'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlOptionCreateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control-option-all:
    post:
      tags:
        - PropertyControlOption
      operationId: propertyControlOptionGetAll
      summary: Get all PropertyControlOption
      description: Get all PropertyControlOption
      security:
        - E2E: []
        - Dev: []
      parameters:
        - $ref: '#/components/parameters/IsPropertyControlOptionArchived'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlOptionGetAllResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control-option-search:
    post:
      tags:
        - PropertyControlOption
      operationId: propertyControlOptionSearch
      summary: Search PropertyControlOption
      description: Search PropertyControlOption
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlOptionSearchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlOptionSearchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control-option/{id}:
    post:
      tags:
        - PropertyControlOption
      operationId: propertyControlOptionGetById
      summary: Get by Id a PropertyControlOption
      description: Get by Id a PropertyControlOption
      security:
        - E2E: []
        - Dev: []
      parameters:
        - $ref: '#/components/parameters/PropertyControlOptionId'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlOptionFindByIdResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    patch:
      tags:
        - PropertyControlOption
      operationId: propertyControlOptionPatch
      summary: Patch a PropertyControlOption
      description: Patch a PropertyControlOption
      parameters:
        - $ref: '#/components/parameters/PropertyControlOptionId'
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlOptionPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlOptionPatchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    put:
      tags:
        - PropertyControlOption
      operationId: propertyControlOptionUpdate
      summary: Update a PropertyControlOption
      description: Update a PropertyControlOption
      parameters:
        - $ref: '#/components/parameters/PropertyControlOptionId'
        - $ref: '#/components/parameters/IsPropertyControlOptionDryRun'
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlOptionUpdateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlOptionUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    delete:
      tags:
        - PropertyControlOption
      operationId: propertyControlOptionArchive
      summary: Archive a PropertyControlOption
      description: Archive a PropertyControlOption
      parameters:
        - $ref: '#/components/parameters/PropertyControlOptionId'
      security:
        - E2E: []
        - Dev: []
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlOptionArchiveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control:
    post:
      tags:
        - PropertyControl
      operationId: propertyControlCreate
      summary: Creates a new PropertyControl
      description: Creates a new PropertyControl
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlCreateRequestBody'
      parameters:
        - $ref: '#/components/parameters/IsPropertyControlDryRun'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlCreateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control-all:
    post:
      tags:
        - PropertyControl
      operationId: propertyControlGetAll
      summary: Get all PropertyControl
      description: Get all PropertyControl
      security:
        - E2E: []
        - Dev: []
      parameters:
        - $ref: '#/components/parameters/IsPropertyControlArchived'
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlPopulateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlGetAllResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control-search:
    post:
      tags:
        - PropertyControl
      operationId: propertyControlSearch
      summary: Search PropertyControl
      description: Search PropertyControl
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlSearchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlSearchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /property-control/{id}:
    post:
      tags:
        - PropertyControl
      operationId: propertyControlGetById
      summary: Get by Id a PropertyControl
      description: Get by Id a PropertyControl
      security:
        - E2E: []
        - Dev: []
      parameters:
        - $ref: '#/components/parameters/PropertyControlId'
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlPopulateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlFindByIdResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    patch:
      tags:
        - PropertyControl
      operationId: propertyControlPatch
      summary: Patch a PropertyControl
      description: Patch a PropertyControl
      parameters:
        - $ref: '#/components/parameters/PropertyControlId'
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlPatchRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlPatchResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    put:
      tags:
        - PropertyControl
      operationId: propertyControlUpdate
      summary: Update a PropertyControl
      description: Update a PropertyControl
      parameters:
        - $ref: '#/components/parameters/PropertyControlId'
        - $ref: '#/components/parameters/IsPropertyControlDryRun'
      security:
        - E2E: []
        - Dev: []
      requestBody:
        $ref: '#/components/requestBodies/PropertyControlUpdateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
    delete:
      tags:
        - PropertyControl
      operationId: propertyControlArchive
      summary: Archive a PropertyControl
      description: Archive a PropertyControl
      parameters:
        - $ref: '#/components/parameters/PropertyControlId'
      security:
        - E2E: []
        - Dev: []
      responses:
        '200':
          $ref: '#/components/responses/PropertyControlArchiveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /secure-link/{token}:
    post:
      tags:
        - SecureLink
      operationId: secureLinkGetByToken
      summary: Get by Token a SecureLink
      description: Get by Token a SecureLink
      parameters:
        - $ref: '#/components/parameters/SecureLinkToken'
      responses:
        '200':
          $ref: '#/components/responses/SecureLinkFindByTokenResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
  /secure-link/{id}:
    delete:
      tags:
        - SecureLink
      operationId: secureLinkArchive
      summary: Archive a SecureLink
      description: Archive a SecureLink
      parameters:
        - $ref: '#/components/parameters/SecureLinkId'
      responses:
        '200':
          $ref: '#/components/responses/SecureLinkArchiveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResultResponse'
        '401':
          $ref: '#/components/responses/MissingTokenResultResponse'
        '403':
          $ref: '#/components/responses/MissingPermissionResultResponse'
        '404':
          $ref: '#/components/responses/NotFoundResultResponse'
        '500':
          $ref: '#/components/responses/InternalErrorResultResponse'
components:
  securitySchemes:
    admin:
      type: http
      scheme: bearer
      bearerFormat: JWT
    member:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Dummy:
      type: object
      properties:
        contract:
          $ref: '#/components/schemas/ResultHandlerInterface'
        healthcheck:
          $ref: '#/components/schemas/Healthcheck'
        mongoose:
          $ref: '#/components/schemas/AccessModelCreate'
    SupportedLanguage:
      type: string
      enum:
        - Fr
        - En
    LoginRequestBody:
      type: object
      required:
        - email
        - password
        - rememberMe
        - deviceUUID
      properties:
        email:
          $ref: '#/components/schemas/Email'
        password:
          type: string
          x-faker: internet.password
        rememberMe:
          type: boolean
        deviceUUID:
          $ref: '#/components/schemas/Uuid'
    RefreshTokenRequestBody:
      type: object
      properties:
        userId:
          $ref: '#/components/schemas/ObjectID'
    LoginResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: object
              required:
                - jwt
                - refreshToken
              properties:
                jwt:
                  type: string
                refreshToken:
                  type: string
    RefreshResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: object
              required:
                - jwt
                - refreshToken
              properties:
                jwt:
                  type: string
                refreshToken:
                  type: string
    DecodedRefreshToken:
      type: object
      required:
        - token
        - userAgentUuid
        - userAgent
        - iat
        - exp
      properties:
        token:
          $ref: '#/components/schemas/BearerToken'
        userAgentUuid:
          type: string
        userAgent:
          type: string
        userId:
          $ref: '#/components/schemas/ObjectID'
        iat:
          description: Issued at
          type: number
        exp:
          description: Expiration time
          type: number
    UserCreate:
      type: object
      required:
        - email
        - password
      properties:
        email:
          $ref: '#/components/schemas/Email'
        password:
          type: string
        refreshTokens:
          type: array
          items:
            type: object
            required:
              - token
              - deviceUUID
              - userAgent
              - rememberMe
              - iat
              - exp
            properties:
              token:
                $ref: '#/components/schemas/BearerToken'
              deviceUUID:
                $ref: '#/components/schemas/Uuid'
              dealerUserId:
                $ref: '#/components/schemas/ObjectID'
              userAgent:
                type: string
              rememberMe:
                type: boolean
              iat:
                description: Issued At (timestamp in UTC)
                type: number
              exp:
                description: Expiration Time (timestamp in UTC)
                type: number
    UserPatch:
      x-min-properties: 1
      type: object
      properties:
        email:
          $ref: '#/components/schemas/Email'
        password:
          type: string
        refreshTokens:
          type: array
          items:
            type: object
            properties:
              token:
                $ref: '#/components/schemas/BearerToken'
              deviceUUID:
                $ref: '#/components/schemas/Uuid'
              dealerUserId:
                $ref: '#/components/schemas/ObjectID'
              userAgent:
                type: string
              rememberMe:
                type: boolean
              iat:
                description: Issued At (timestamp in UTC)
                type: number
              exp:
                description: Expiration Time (timestamp in UTC)
                type: number
    UserSearchRequestBody:
      $ref: '#/components/schemas/UserSearch'
    UserUpdate:
      type: object
      required:
        - email
        - password
      properties:
        email:
          $ref: '#/components/schemas/Email'
        password:
          type: string
        refreshTokens:
          type: array
          items:
            type: object
            required:
              - token
              - deviceUUID
              - userAgent
              - rememberMe
              - iat
              - exp
            properties:
              token:
                $ref: '#/components/schemas/BearerToken'
              deviceUUID:
                $ref: '#/components/schemas/Uuid'
              dealerUserId:
                $ref: '#/components/schemas/ObjectID'
              userAgent:
                type: string
              rememberMe:
                type: boolean
              iat:
                description: Issued At (timestamp in UTC)
                type: number
              exp:
                description: Expiration Time (timestamp in UTC)
                type: number
    UserSearch:
      allOf:
        - $ref: '#/components/schemas/UserPaginationQuery'
        - $ref: '#/components/schemas/UserConditionQuery'
    UserConditionFields:
      type: object
      x-min-properties: 1
      properties:
        id:
          $ref: '#/components/schemas/SearchStringCondition'
        updatedAt:
          $ref: '#/components/schemas/SearchDateCondition'
        createdAt:
          $ref: '#/components/schemas/SearchDateCondition'
        archived:
          $ref: '#/components/schemas/SearchBooleanCondition'
        email:
          $ref: '#/components/schemas/SearchStringCondition'
        refreshTokens.token:
          $ref: '#/components/schemas/SearchStringCondition'
    UserConditionQuery:
      type: object
      x-min-required:
        - and
        - or
      properties:
        and:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/UserConditionFields'
        or:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/UserConditionFields'
    UserPaginationQuery:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/UserPagination'
    UserPagination:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            sort:
              $ref: '#/components/schemas/UserSort'
    UserSort:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Sorting'
        updatedAt:
          $ref: '#/components/schemas/Sorting'
        createdAt:
          $ref: '#/components/schemas/Sorting'
        archived:
          $ref: '#/components/schemas/Sorting'
        email:
          $ref: '#/components/schemas/Sorting'
        refreshTokens.token:
          $ref: '#/components/schemas/Sorting'
    UserCreateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/User'
    UserGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/User'
    UserFindByIdResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/User'
    UserSearchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/User'
    UserPatchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/User'
    UserUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/User'
    UserArchiveResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/User'
    User:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - email
            - password
          properties:
            email:
              $ref: '#/components/schemas/Email'
            password:
              type: string
            refreshTokens:
              type: array
              items:
                $ref: '#/components/schemas/RefreshToken'
    JwtTokenPayload:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
    RefreshToken:
      type: object
      required:
        - token
        - deviceUUID
        - userAgent
        - rememberMe
        - iat
        - exp
      properties:
        token:
          $ref: '#/components/schemas/BearerToken'
        deviceUUID:
          $ref: '#/components/schemas/Uuid'
        dealerUserId:
          $ref: '#/components/schemas/ObjectID'
        userAgent:
          type: string
        rememberMe:
          type: boolean
        iat:
          description: Issued At (timestamp in UTC)
          type: number
        exp:
          description: Expiration Time (timestamp in UTC)
          type: number
    HealthcheckResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Healthcheck'
    Healthcheck:
      type: object
      required:
        - version
      properties:
        version:
          type: string
    ManualString:
      type: object
      properties:
        propertyControlLinkId:
          $ref: '#/components/schemas/ObjectID'
        value:
          type: string
    ManualNumber:
      type: object
      properties:
        propertyControlLinkId:
          $ref: '#/components/schemas/ObjectID'
        value:
          type: number
    ManualBoolean:
      type: object
      properties:
        propertyControlLinkId:
          $ref: '#/components/schemas/ObjectID'
        value:
          type: boolean
    ManualDate:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/DateTime'
        propertyControlLinkId:
          $ref: '#/components/schemas/ObjectID'
    PropertyControlType:
      type: string
      enum:
        - TranslatableText
        - String
        - Number
        - Boolean
        - Date
    StringOptionId:
      type: string
      description: Used by yest-cli to map proper response. (string)
      pattern: ^[0-9a-f]{24}$
    TranslatableTextOptionId:
      type: string
      description: Used by yest-cli to map proper response. (translatableText)
      pattern: ^[0-9a-f]{24}$
    NumberOptionId:
      type: string
      description: Used by yest-cli to map proper response. (number)
      pattern: ^[0-9a-f]{24}$
    BooleanOptionId:
      type: string
      description: Used by yest-cli to map proper response. (boolean)
      pattern: ^[0-9a-f]{24}$
    DateOptionId:
      type: string
      description: Used by yest-cli to map proper response. (date)
      pattern: ^[0-9a-f]{24}$
    BaseOption:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - sequence
            - controlId
            - label
          properties:
            sequence:
              type: number
            controlId:
              $ref: '#/components/schemas/ObjectID'
            label:
              $ref: '#/components/schemas/TranslatableText'
    TranslatableTextOption:
      allOf:
        - $ref: '#/components/schemas/BaseOption'
        - type: object
          required:
            - value
          properties:
            value:
              $ref: '#/components/schemas/TranslatableText'
    StringOption:
      allOf:
        - $ref: '#/components/schemas/BaseOption'
        - type: object
          required:
            - value
          properties:
            value:
              type: string
    NumberOption:
      allOf:
        - $ref: '#/components/schemas/BaseOption'
        - type: object
          required:
            - value
          properties:
            value:
              type: number
    BooleanOption:
      allOf:
        - $ref: '#/components/schemas/BaseOption'
        - type: object
          required:
            - value
          properties:
            value:
              type: boolean
    DateOption:
      allOf:
        - $ref: '#/components/schemas/BaseOption'
        - type: object
          required:
            - value
          properties:
            value:
              $ref: '#/components/schemas/DateTime'
    Country:
      type: string
      enum:
        - Canada
    PaginationLimit:
      type: number
      minimum: -1
      maximum: 2147483647
      default: 10
      format: int32
    PaginationLimit1000:
      type: number
      minimum: 0
      maximum: 1000
      default: 10
      format: int32
    PaginationOffset:
      type: number
      minimum: 0
      maximum: 2147483647
      format: int32
    PaginationPage:
      type: number
      minimum: 0
      maximum: 2147483647
      format: int32
    Pagination:
      type: object
      properties:
        limit:
          $ref: '#/components/schemas/PaginationLimit'
        offset:
          $ref: '#/components/schemas/PaginationOffset'
        page:
          $ref: '#/components/schemas/PaginationPage'
        sort:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Sorting'
    Sorting:
      type: string
      enum:
        - Ascending
        - Descending
    Province:
      type: string
      enum:
        - Alberta
        - BritishColumbia
        - Manitoba
        - NewBrunswick
        - NewfoundlandAndLabrador
        - NorthwestTerritories
        - NovaScotia
        - Nunavut
        - Ontario
        - PrinceEdwardIsland
        - Quebec
        - Saskatchewan
        - Yukon
    SearchDateCondition:
      type: array
      items:
        $ref: '#/components/schemas/SearchDateOperation'
    SearchNumberCondition:
      type: array
      items:
        $ref: '#/components/schemas/SearchNumberOperation'
    SearchBooleanCondition:
      type: array
      items:
        $ref: '#/components/schemas/SearchBooleanOperation'
    SearchStringCondition:
      type: array
      items:
        $ref: '#/components/schemas/SearchStringOperation'
    SearchDateOperation:
      allOf:
        - $ref: '#/components/schemas/SearchOperatorAdvanced'
        - type: object
          required:
            - values
          properties:
            values:
              nullable: true
              type: array
              items:
                type: string
                format: date-time
    SearchNumberOperation:
      allOf:
        - $ref: '#/components/schemas/SearchOperatorAdvanced'
        - type: object
          required:
            - values
          properties:
            values:
              nullable: true
              type: array
              items:
                type: number
    SearchBooleanOperation:
      allOf:
        - $ref: '#/components/schemas/SearchOperatorBasic'
        - type: object
          required:
            - value
          properties:
            value:
              nullable: true
              type: boolean
    SearchStringOperation:
      allOf:
        - $ref: '#/components/schemas/SearchOperatorBasic'
        - type: object
          required:
            - values
          properties:
            isCaseSensitive:
              type: boolean
              default: false
            isExactMatching:
              type: boolean
              default: false
            isTranslatable:
              type: boolean
              default: false
            values:
              nullable: true
              type: array
              items:
                type: string
    SearchOperatorBasic:
      type: object
      properties:
        operator:
          $ref: '#/components/schemas/BasicOperator'
    SearchOperatorAdvanced:
      type: object
      properties:
        operator:
          $ref: '#/components/schemas/AdvancedOperator'
    BasicOperator:
      type: string
      default: Equal
      enum:
        - Equal
        - Different
    AdvancedOperator:
      type: string
      default: Equal
      enum:
        - Equal
        - Different
        - GreaterThan
        - LesserThan
        - GreaterThanEqual
        - LesserThanEqual
    Percentage:
      type: number
      x-faker: datatype.number
      minimum: 1
      maximum: 100
    BearerToken:
      type: string
      pattern: ^[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+/=]*$
    BaseModel:
      type: object
      required:
        - id
        - createdAt
        - updatedAt
        - archived
      properties:
        id:
          x-index: true
          $ref: '#/components/schemas/ObjectID'
        createdAt:
          type: string
          format: date-time
          maxLength: 24
          x-faker: date.past
        updatedAt:
          type: string
          format: date-time
          maxLength: 24
          x-faker: date.future
        archived:
          type: boolean
    ObjectID:
      type: string
      pattern: ^[0-9a-f]{24}$
    HexColor:
      description: 'Hex color including alpha starting with the # ex: #43ff64d9'
      type: string
      pattern: ^#[0-9a-f]{8}$
    TextTranslation:
      type: object
      required:
        - text
      properties:
        language:
          type: string
        text:
          type: string
          x-faker: lorem.paragraph
    TranslatableText:
      type: object
      required:
        - translation
      properties:
        translation:
          type: array
          items:
            $ref: '#/components/schemas/TextTranslation'
    UrlTranslation:
      type: object
      required:
        - text
      properties:
        language:
          type: string
        text:
          type: string
          x-faker: internet.url
    TranslatableUrl:
      type: object
      required:
        - translation
      properties:
        translation:
          type: array
          items:
            $ref: '#/components/schemas/UrlTranslation'
    Latitude:
      type: number
      format: double
      minimum: -90
      maximum: 90
      x-faker: address.latitude
      example: 41.890169
    Longitude:
      type: number
      format: double
      minimum: -180
      maximum: 180
      x-faker: address.longitude
      example: 12.492269
    MultiDayTime:
      type: string
      description: Time from "noon minus 12h", 24h+ format
      pattern: ^\d{2}:[0-5][0-9]:[0-5][0-9]$
      example: '25:35:00'
    NonNegativeInteger:
      type: integer
      format: int32
      minimum: 0
      maximum: 2147483647
    ModelDate:
      type: string
      pattern: \d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])
      example: '20180913'
    Email:
      type: string
      format: email
    Phone:
      type: string
      pattern: ^1{0,1}[0-9]{10}$
      example: 15555555555
    DateTime:
      type: string
      format: date-time
      x-faker: date.future
      maxLength: 24
    Uuid:
      type: string
      pattern: >-
        ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
      example: 1f6c68d8-f3ec-4b5f-bf94-64545c12dac4
    ErrorData:
      type: object
      required:
        - uuid
        - httpCode
        - message
      properties:
        uuid:
          $ref: '#/components/schemas/Uuid'
        httpCode:
          description: >-
            An http code that could be use to represent the error through an
            http layer.
          type: number
          minimum: 100
          maximum: 999
        message:
          $ref: '#/components/schemas/TranslatableText'
    ResultHandlerPagination:
      type: object
      required:
        - totalItems
        - page
        - totalPages
      properties:
        totalItems:
          type: number
          minimum: 0
          maximum: 2147483647
          format: int32
        limit:
          type: number
          minimum: 0
          maximum: 2147483647
          format: int32
        hasPrevPage:
          type: boolean
        hasNextPage:
          type: boolean
        page:
          $ref: '#/components/schemas/PaginationPage'
        totalPages:
          type: number
          minimum: 0
        prevPage:
          type: number
          minimum: 0
        nextPage:
          type: number
          minimum: 1
    SearchNumberDistinct:
      type: object
      required:
        - key
        - count
      properties:
        key:
          type: number
        count:
          type: number
    SearchStringDistinct:
      type: object
      required:
        - key
        - count
      properties:
        key:
          type: string
        count:
          type: number
    SearchBooleanDistinct:
      type: object
      required:
        - key
        - count
      properties:
        key:
          type: boolean
        count:
          type: number
    SearchDateDistinct:
      type: object
      required:
        - key
        - count
      properties:
        key:
          $ref: '#/components/schemas/DateTime'
        count:
          type: number
    SearchNumberDistincts:
      type: array
      items:
        $ref: '#/components/schemas/SearchNumberDistinct'
    SearchStringDistincts:
      type: array
      items:
        $ref: '#/components/schemas/SearchStringDistinct'
    SearchBooleanDistincts:
      type: array
      items:
        $ref: '#/components/schemas/SearchBooleanDistinct'
    SearchDateDistincts:
      type: array
      items:
        $ref: '#/components/schemas/SearchDateDistinct'
    SearchNumberDistinctArr:
      type: object
      required:
        - key
        - count
      properties:
        key:
          type: array
          items:
            type: number
        count:
          type: number
    SearchStringDistinctArr:
      type: object
      required:
        - key
        - count
      properties:
        key:
          type: array
          items:
            type: string
        count:
          type: number
    SearchBooleanDistinctArr:
      type: object
      required:
        - key
        - count
      properties:
        key:
          type: array
          items:
            type: boolean
        count:
          type: number
    SearchDateDistinctArr:
      type: object
      required:
        - key
        - count
      properties:
        key:
          type: array
          items:
            $ref: '#/components/schemas/DateTime'
        count:
          type: number
    SearchNumberDistinctsArr:
      type: array
      items:
        $ref: '#/components/schemas/SearchNumberDistinctArr'
    SearchStringDistinctsArr:
      type: array
      items:
        $ref: '#/components/schemas/SearchStringDistinctArr'
    SearchBooleanDistinctsArr:
      type: array
      items:
        $ref: '#/components/schemas/SearchBooleanDistinctArr'
    SearchDateDistinctsArr:
      type: array
      items:
        $ref: '#/components/schemas/SearchDateDistinctArr'
    ResultHandlerInterface:
      type: object
      description: >-
        Result object used to contain api data. You should use ResultHandler
        Class instead of the interface.
      required:
        - isSuccess
      properties:
        isSuccess:
          type: boolean
        error:
          $ref: '#/components/schemas/ErrorData'
        pagination:
          $ref: '#/components/schemas/ResultHandlerPagination'
    ProtectedTranslatableText:
      type: object
      required:
        - scopeNames
        - value
      properties:
        value:
          $ref: '#/components/schemas/TranslatableText'
        scopeNames:
          description: scope name to have access to the value
          type: array
          items:
            type: string
    ProtectedString:
      type: object
      required:
        - scopeNames
        - value
      properties:
        value:
          type: string
        scopeNames:
          description: scope names to have access to the value
          type: array
          items:
            type: string
    ProtectedNumber:
      type: object
      required:
        - scopeNames
        - value
      properties:
        value:
          type: number
        scopeNames:
          description: scope name to have access to the value
          type: array
          items:
            type: string
    ProtectedBoolean:
      type: object
      required:
        - scopeNames
        - value
      properties:
        value:
          type: boolean
        scopeNames:
          description: scope name to have access to the value
          type: array
          items:
            type: string
    ProtectedDate:
      type: object
      required:
        - scopeNames
        - value
      properties:
        value:
          $ref: '#/components/schemas/DateTime'
        scopeNames:
          description: scope name to have access to the value
          type: array
          items:
            type: string
    AccessModelCreate:
      type: object
      required:
        - label
        - accessScopeIds
        - usage
        - isAssignable
      properties:
        label:
          $ref: '#/components/schemas/TranslatableText'
        accessScopeIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        usage:
          $ref: '#/components/schemas/AccessModelUsage'
        isAssignable:
          type: boolean
    AccessModelPatch:
      x-min-properties: 1
      type: object
      properties:
        label:
          $ref: '#/components/schemas/TranslatableText'
        accessScopeIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        usage:
          $ref: '#/components/schemas/AccessModelUsage'
        isAssignable:
          type: boolean
    AccessModelSearchRequestBody:
      $ref: '#/components/schemas/AccessModelSearch'
    AccessModelUpdate:
      type: object
      required:
        - label
        - accessScopeIds
        - usage
        - isAssignable
      properties:
        label:
          $ref: '#/components/schemas/TranslatableText'
        accessScopeIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        usage:
          $ref: '#/components/schemas/AccessModelUsage'
        isAssignable:
          type: boolean
    AccessModelSearch:
      allOf:
        - $ref: '#/components/schemas/AccessModelPaginationQuery'
        - $ref: '#/components/schemas/AccessModelConditionQuery'
        - $ref: '#/components/schemas/AccessModelPopulateRequestBody'
    AccessModelConditionFields:
      type: object
      x-min-properties: 1
      properties:
        id:
          $ref: '#/components/schemas/SearchStringCondition'
        usage:
          $ref: '#/components/schemas/SearchStringCondition'
        isAssignable:
          $ref: '#/components/schemas/SearchBooleanCondition'
        updatedAt:
          $ref: '#/components/schemas/SearchDateCondition'
        createdAt:
          $ref: '#/components/schemas/SearchDateCondition'
        archived:
          $ref: '#/components/schemas/SearchBooleanCondition'
        label:
          $ref: '#/components/schemas/SearchStringCondition'
    AccessModelConditionQuery:
      type: object
      x-min-required:
        - and
        - or
      properties:
        and:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/AccessModelConditionFields'
        or:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/AccessModelConditionFields'
    AccessModelPaginationQuery:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/AccessModelPagination'
    AccessModelPagination:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            sort:
              $ref: '#/components/schemas/AccessModelSort'
    AccessModelSort:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Sorting'
        updatedAt:
          $ref: '#/components/schemas/Sorting'
        createdAt:
          $ref: '#/components/schemas/Sorting'
        archived:
          $ref: '#/components/schemas/Sorting'
        label:
          $ref: '#/components/schemas/Sorting'
        accessScopeIds:
          $ref: '#/components/schemas/Sorting'
        accessScopes:
          $ref: '#/components/schemas/Sorting'
        usage:
          $ref: '#/components/schemas/Sorting'
        isAssignable:
          $ref: '#/components/schemas/Sorting'
    AccessModelPopulateRequestBody:
      type: object
      properties:
        populate:
          $ref: '#/components/schemas/AccessModelPopulateFields'
    AccessModelPopulateFields:
      type: array
      items:
        $ref: '#/components/schemas/AccessModelPopulateField'
    AccessModelPopulateField:
      type: object
      required:
        - label
      properties:
        label:
          $ref: '#/components/schemas/AccessModelPopulateEnum'
        match:
          type: object
    AccessModelPopulateEnum:
      type: string
      enum:
        - accessScopes
    AccessModel:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - label
            - accessScopeIds
            - usage
            - isAssignable
          properties:
            label:
              $ref: '#/components/schemas/TranslatableText'
            accessScopeIds:
              type: array
              items:
                $ref: '#/components/schemas/ObjectID'
            usage:
              $ref: '#/components/schemas/AccessModelUsage'
            isAssignable:
              type: boolean
            accessScopes:
              type: array
              items:
                $ref: '#/components/schemas/AccessScope'
    AccessModelUsage:
      type: string
      enum:
        - User
        - Dealer
        - Both
    AccessModelCreateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/AccessModel'
    AccessModelGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/AccessModel'
    AccessModelFindByIdResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/AccessModel'
    AccessModelSearchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/AccessModel'
    AccessModelPatchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/AccessModel'
    AccessModelUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/AccessModel'
    AccessModelArchiveResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/AccessModel'
    AccessScopeCreate:
      type: object
      required:
        - label
        - scope
        - isAdditionalScope
        - extensionModules
      properties:
        label:
          $ref: '#/components/schemas/TranslatableText'
        scope:
          type: string
          x-index: true
          description: OperationID or additionalScope. Must be unique.
        isAdditionalScope:
          type: boolean
          x-index: true
        extensionModules:
          x-index: true
          type: array
          items:
            type: string
    AccessScopePatch:
      x-min-properties: 1
      type: object
      properties:
        label:
          $ref: '#/components/schemas/TranslatableText'
        scope:
          type: string
          x-index: true
          description: OperationID or additionalScope. Must be unique.
        isAdditionalScope:
          type: boolean
          x-index: true
        extensionModules:
          x-index: true
          type: array
          items:
            type: string
    AccessScopeSearchRequestBody:
      $ref: '#/components/schemas/AccessScopeSearch'
    AccessScopeUpdate:
      type: object
      required:
        - label
        - scope
        - isAdditionalScope
        - extensionModules
      properties:
        label:
          $ref: '#/components/schemas/TranslatableText'
        scope:
          type: string
          x-index: true
          description: OperationID or additionalScope. Must be unique.
        isAdditionalScope:
          type: boolean
          x-index: true
        extensionModules:
          x-index: true
          type: array
          items:
            type: string
    AccessScopeSearch:
      allOf:
        - $ref: '#/components/schemas/AccessScopePaginationQuery'
        - $ref: '#/components/schemas/AccessScopeConditionQuery'
    AccessScopeConditionFields:
      type: object
      x-min-properties: 1
      properties:
        id:
          $ref: '#/components/schemas/SearchStringCondition'
        updatedAt:
          $ref: '#/components/schemas/SearchDateCondition'
        createdAt:
          $ref: '#/components/schemas/SearchDateCondition'
        archived:
          $ref: '#/components/schemas/SearchBooleanCondition'
        scope:
          $ref: '#/components/schemas/SearchStringCondition'
        isAdditionalScope:
          $ref: '#/components/schemas/SearchBooleanCondition'
        moduleExtension:
          $ref: '#/components/schemas/SearchStringCondition'
    AccessScopeConditionQuery:
      type: object
      x-min-required:
        - and
        - or
      properties:
        and:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/AccessScopeConditionFields'
        or:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/AccessScopeConditionFields'
    AccessScopePaginationQuery:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/AccessScopePagination'
    AccessScopePagination:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            sort:
              $ref: '#/components/schemas/AccessScopeSort'
    AccessScopeSort:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Sorting'
        updatedAt:
          $ref: '#/components/schemas/Sorting'
        createdAt:
          $ref: '#/components/schemas/Sorting'
        archived:
          $ref: '#/components/schemas/Sorting'
        label:
          $ref: '#/components/schemas/Sorting'
        scope:
          $ref: '#/components/schemas/Sorting'
        isAdditionalScope:
          $ref: '#/components/schemas/Sorting'
        moduleExtension:
          $ref: '#/components/schemas/Sorting'
    AccessScopeCreateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/AccessScope'
    AccessScopeGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/AccessScope'
    AccessScopeFindByIdResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/AccessScope'
    AccessScopeSearchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/AccessScope'
    AccessScopePatchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/AccessScope'
    AccessScopeUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/AccessScope'
    AccessScopeArchiveResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/AccessScope'
    AccessScope:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - label
            - scope
            - isAdditionalScope
            - extensionModules
          properties:
            label:
              $ref: '#/components/schemas/TranslatableText'
            scope:
              type: string
              description: OperationID or additionalScope. Must be unique.
            isAdditionalScope:
              type: boolean
            extensionModules:
              x-index: true
              type: array
              items:
                type: string
    PropertyControlLinkCreateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControlLink'
    PropertyControlLinkGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/PropertyControlLink'
    PropertyControlLinkFindByIdResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControlLink'
    PropertyControlLinkSearchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/PropertyControlLink'
    PropertyControlLinkPatchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControlLink'
    PropertyControlLinkUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControlLink'
    PropertyControlLinkArchiveResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControlLink'
    PropertyControlLinkCreate:
      type: object
      required:
        - propertyControlId
        - extensionModule
      properties:
        propertyControlId:
          x-index: true
          $ref: '#/components/schemas/ObjectID'
        extensionModule:
          x-index: true
          type: string
        hiddenPropertyOptionIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        coloredPropertyOptions:
          type: array
          items:
            type: object
            required:
              - bgColor
              - textColor
              - propertyOptionId
            properties:
              bgColor:
                $ref: '#/components/schemas/HexColor'
              textColor:
                $ref: '#/components/schemas/HexColor'
              propertyOptionId:
                $ref: '#/components/schemas/ObjectID'
    PropertyControlLinkPatch:
      x-min-properties: 1
      type: object
      properties:
        propertyControlId:
          x-index: true
          $ref: '#/components/schemas/ObjectID'
        extensionModule:
          x-index: true
          type: string
        hiddenPropertyOptionIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        coloredPropertyOptions:
          type: array
          items:
            type: object
            required:
              - bgColor
              - textColor
              - propertyOptionId
            properties:
              bgColor:
                $ref: '#/components/schemas/HexColor'
              textColor:
                $ref: '#/components/schemas/HexColor'
              propertyOptionId:
                $ref: '#/components/schemas/ObjectID'
    PropertyControlLinkSearchRequestBody:
      $ref: '#/components/schemas/PropertyControlLinkSearch'
    PropertyControlLinkUpdate:
      type: object
      required:
        - propertyControlId
        - extensionModule
      properties:
        propertyControlId:
          x-index: true
          $ref: '#/components/schemas/ObjectID'
        extensionModule:
          x-index: true
          type: string
        hiddenPropertyOptionIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
        coloredPropertyOptions:
          type: array
          items:
            type: object
            required:
              - bgColor
              - textColor
              - propertyOptionId
            properties:
              bgColor:
                $ref: '#/components/schemas/HexColor'
              textColor:
                $ref: '#/components/schemas/HexColor'
              propertyOptionId:
                $ref: '#/components/schemas/ObjectID'
    PropertyControlLinkSearch:
      allOf:
        - $ref: '#/components/schemas/PropertyControlLinkPaginationQuery'
        - $ref: '#/components/schemas/PropertyControlLinkConditionQuery'
        - $ref: '#/components/schemas/PropertyControlLinkPopulateRequestBody'
    PropertyControlLinkConditionFields:
      type: object
      x-min-properties: 1
      properties:
        id:
          $ref: '#/components/schemas/SearchStringCondition'
        updatedAt:
          $ref: '#/components/schemas/SearchDateCondition'
        createdAt:
          $ref: '#/components/schemas/SearchDateCondition'
        archived:
          $ref: '#/components/schemas/SearchBooleanCondition'
        propertyControlId:
          $ref: '#/components/schemas/SearchStringCondition'
        extensionModule:
          $ref: '#/components/schemas/SearchStringCondition'
    PropertyControlLinkConditionQuery:
      type: object
      x-min-required:
        - and
        - or
      properties:
        and:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/PropertyControlLinkConditionFields'
        or:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/PropertyControlLinkConditionFields'
    PropertyControlLinkPaginationQuery:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PropertyControlLinkPagination'
    PropertyControlLinkPagination:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            sort:
              $ref: '#/components/schemas/PropertyControlLinkSort'
    PropertyControlLinkSort:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Sorting'
        updatedAt:
          $ref: '#/components/schemas/Sorting'
        createdAt:
          $ref: '#/components/schemas/Sorting'
        archived:
          $ref: '#/components/schemas/Sorting'
        propertyControlId:
          $ref: '#/components/schemas/Sorting'
        extensionModule:
          $ref: '#/components/schemas/Sorting'
        hiddenPropertyOptionIds:
          $ref: '#/components/schemas/Sorting'
        propertyControl:
          $ref: '#/components/schemas/Sorting'
        coloredPropertyOptions:
          $ref: '#/components/schemas/Sorting'
    PropertyControlLinkPopulateRequestBody:
      type: object
      properties:
        populate:
          $ref: '#/components/schemas/PropertyControlLinkPopulateFields'
    PropertyControlLinkPopulateFields:
      type: array
      items:
        $ref: '#/components/schemas/PropertyControlLinkPopulateField'
    PropertyControlLinkPopulateField:
      type: object
      required:
        - label
      properties:
        label:
          $ref: '#/components/schemas/PropertyControlLinkPopulateEnum'
        match:
          type: object
    PropertyControlLinkPopulateEnum:
      type: string
      enum:
        - propertyControl
        - propertyControl_propertyControlOptions
    PropertyControlLink:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - propertyControlId
            - extensionModule
          properties:
            propertyControlId:
              $ref: '#/components/schemas/ObjectID'
            extensionModule:
              type: string
            hiddenPropertyOptionIds:
              type: array
              items:
                $ref: '#/components/schemas/ObjectID'
            propertyControl:
              $ref: '#/components/schemas/PropertyControl'
            coloredPropertyOptions:
              type: array
              items:
                $ref: '#/components/schemas/ColoredPropertyOption'
    ColoredPropertyOption:
      type: object
      required:
        - bgColor
        - textColor
        - propertyOptionId
      properties:
        bgColor:
          $ref: '#/components/schemas/HexColor'
        textColor:
          $ref: '#/components/schemas/HexColor'
        propertyOptionId:
          $ref: '#/components/schemas/ObjectID'
    PropertyControlOptionCreate:
      type: object
      additionalProperties: true
      required:
        - propertyControlType
      properties:
        propertyControlType:
          $ref: '#/components/schemas/PropertyControlType'
    PropertyControlOptionPatch:
      x-min-properties: 1
      type: object
      properties:
        propertyControlType:
          $ref: '#/components/schemas/PropertyControlType'
    PropertyControlOptionSearchRequestBody:
      $ref: '#/components/schemas/PropertyControlOptionSearch'
    PropertyControlOptionUpdate:
      type: object
      additionalProperties: true
      required:
        - propertyControlType
      properties:
        propertyControlType:
          $ref: '#/components/schemas/PropertyControlType'
    PropertyControlOptionSearch:
      allOf:
        - $ref: '#/components/schemas/PropertyControlOptionPaginationQuery'
        - $ref: '#/components/schemas/PropertyControlOptionConditionQuery'
    PropertyControlOptionConditionFields:
      type: object
      x-min-properties: 1
      properties:
        id:
          $ref: '#/components/schemas/SearchStringCondition'
        updatedAt:
          $ref: '#/components/schemas/SearchDateCondition'
        createdAt:
          $ref: '#/components/schemas/SearchDateCondition'
        archived:
          $ref: '#/components/schemas/SearchBooleanCondition'
    PropertyControlOptionConditionQuery:
      type: object
      x-min-required:
        - and
        - or
      properties:
        and:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/PropertyControlOptionConditionFields'
        or:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/PropertyControlOptionConditionFields'
    PropertyControlOptionPaginationQuery:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PropertyControlOptionPagination'
    PropertyControlOptionPagination:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            sort:
              $ref: '#/components/schemas/PropertyControlOptionSort'
    PropertyControlOptionSort:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Sorting'
        updatedAt:
          $ref: '#/components/schemas/Sorting'
        createdAt:
          $ref: '#/components/schemas/Sorting'
        archived:
          $ref: '#/components/schemas/Sorting'
        propertyControlType:
          $ref: '#/components/schemas/Sorting'
    PropertyControlOptionCreateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControlOption'
    PropertyControlOptionGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/PropertyControlOption'
    PropertyControlOptionFindByIdResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControlOption'
    PropertyControlOptionSearchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/PropertyControlOption'
    PropertyControlOptionPatchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControlOption'
    PropertyControlOptionUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControlOption'
    PropertyControlOptionArchiveResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControlOption'
    PropertyControlOption:
      type: object
      additionalProperties: true
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - propertyControlType
          properties:
            propertyControlType:
              $ref: '#/components/schemas/PropertyControlType'
    PropertyControlCreate:
      type: object
      required:
        - label
        - propertyControlType
      properties:
        propertyControlType:
          x-index: true
          $ref: '#/components/schemas/PropertyControlType'
        label:
          $ref: '#/components/schemas/TranslatableText'
        description:
          $ref: '#/components/schemas/TranslatableText'
        propertyControlOptionsIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
    PropertyControlPatch:
      x-min-properties: 1
      type: object
      properties:
        propertyControlType:
          x-index: true
          $ref: '#/components/schemas/PropertyControlType'
        label:
          $ref: '#/components/schemas/TranslatableText'
        description:
          $ref: '#/components/schemas/TranslatableText'
        propertyControlOptionsIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
    PropertyControlSearchRequestBody:
      $ref: '#/components/schemas/PropertyControlSearch'
    PropertyControlUpdate:
      type: object
      required:
        - label
        - propertyControlType
      properties:
        propertyControlType:
          x-index: true
          $ref: '#/components/schemas/PropertyControlType'
        label:
          $ref: '#/components/schemas/TranslatableText'
        description:
          $ref: '#/components/schemas/TranslatableText'
        propertyControlOptionsIds:
          type: array
          items:
            $ref: '#/components/schemas/ObjectID'
    PropertyControlSearch:
      allOf:
        - $ref: '#/components/schemas/PropertyControlPaginationQuery'
        - $ref: '#/components/schemas/PropertyControlConditionQuery'
        - $ref: '#/components/schemas/PropertyControlPopulateRequestBody'
    PropertyControlConditionFields:
      type: object
      x-min-properties: 1
      properties:
        id:
          $ref: '#/components/schemas/SearchStringCondition'
        updatedAt:
          $ref: '#/components/schemas/SearchDateCondition'
        createdAt:
          $ref: '#/components/schemas/SearchDateCondition'
        archived:
          $ref: '#/components/schemas/SearchBooleanCondition'
        propertyControlType:
          $ref: '#/components/schemas/SearchStringCondition'
    PropertyControlConditionQuery:
      type: object
      x-min-required:
        - and
        - or
      properties:
        and:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/PropertyControlConditionFields'
        or:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/PropertyControlConditionFields'
    PropertyControlPaginationQuery:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PropertyControlPagination'
    PropertyControlPagination:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            sort:
              $ref: '#/components/schemas/PropertyControlSort'
    PropertyControlSort:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Sorting'
        updatedAt:
          $ref: '#/components/schemas/Sorting'
        createdAt:
          $ref: '#/components/schemas/Sorting'
        archived:
          $ref: '#/components/schemas/Sorting'
        propertyControlType:
          $ref: '#/components/schemas/Sorting'
        label:
          $ref: '#/components/schemas/Sorting'
        description:
          $ref: '#/components/schemas/Sorting'
        propertyControlOptionsIds:
          $ref: '#/components/schemas/Sorting'
        propertyControlOptions:
          $ref: '#/components/schemas/Sorting'
    PropertyControlPopulateRequestBody:
      type: object
      properties:
        populate:
          $ref: '#/components/schemas/PropertyControlPopulateFields'
    PropertyControlPopulateFields:
      type: array
      items:
        $ref: '#/components/schemas/PropertyControlPopulateField'
    PropertyControlPopulateField:
      type: object
      required:
        - label
      properties:
        label:
          $ref: '#/components/schemas/PropertyControlPopulateEnum'
        match:
          type: object
    PropertyControlPopulateEnum:
      type: string
      enum:
        - propertyControlOptions
    PropertyControlCreateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControl'
    PropertyControlGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/PropertyControl'
    PropertyControlFindByIdResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControl'
    PropertyControlSearchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/PropertyControl'
    PropertyControlPatchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControl'
    PropertyControlUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControl'
    PropertyControlArchiveResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/PropertyControl'
    PropertyControl:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - label
            - propertyControlType
          properties:
            propertyControlType:
              $ref: '#/components/schemas/PropertyControlType'
            label:
              $ref: '#/components/schemas/TranslatableText'
            description:
              $ref: '#/components/schemas/TranslatableText'
            propertyControlOptionsIds:
              type: array
              items:
                $ref: '#/components/schemas/ObjectID'
            propertyControlOptions:
              type: array
              items:
                $ref: '#/components/schemas/PropertyControlOption'
    SecureLinkFindByTokenResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/SecureLink'
    SecureLinkCreateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/SecureLink'
    SecureLinkGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/SecureLink'
    SecureLinkFindByIdResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/SecureLink'
    SecureLinkSearchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              type: array
              minItems: 0
              maxItems: 1000
              items:
                $ref: '#/components/schemas/SecureLink'
    SecureLinkPatchResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/SecureLink'
    SecureLinkUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/SecureLink'
    SecureLinkArchiveResponse:
      allOf:
        - $ref: '#/components/schemas/ResultHandlerInterface'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/SecureLink'
    SecureLink:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          required:
            - source
            - target
          properties:
            source:
              type: string
            target:
              type: string
            expirationDate:
              $ref: '#/components/schemas/DateTime'
    SecureLinkCreate:
      type: object
      required:
        - source
        - target
      properties:
        source:
          type: string
        target:
          type: string
        expirationDate:
          $ref: '#/components/schemas/DateTime'
    SecureLinkPatch:
      x-min-properties: 1
      type: object
      properties:
        source:
          type: string
        target:
          type: string
        expirationDate:
          $ref: '#/components/schemas/DateTime'
    SecureLinkSearchRequestBody:
      $ref: '#/components/schemas/SecureLinkSearch'
    SecureLinkUpdate:
      type: object
      required:
        - source
        - target
      properties:
        source:
          type: string
        target:
          type: string
        expirationDate:
          $ref: '#/components/schemas/DateTime'
    SecureLinkSearch:
      allOf:
        - $ref: '#/components/schemas/SecureLinkPaginationQuery'
        - $ref: '#/components/schemas/SecureLinkConditionQuery'
    SecureLinkConditionFields:
      type: object
      x-min-properties: 1
      properties:
        id:
          $ref: '#/components/schemas/SearchStringCondition'
        updatedAt:
          $ref: '#/components/schemas/SearchDateCondition'
        createdAt:
          $ref: '#/components/schemas/SearchDateCondition'
        archived:
          $ref: '#/components/schemas/SearchBooleanCondition'
    SecureLinkConditionQuery:
      type: object
      x-min-required:
        - and
        - or
      properties:
        and:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/SecureLinkConditionFields'
        or:
          type: array
          x-min-length: 1
          items:
            $ref: '#/components/schemas/SecureLinkConditionFields'
    SecureLinkPaginationQuery:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/SecureLinkPagination'
    SecureLinkPagination:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            sort:
              $ref: '#/components/schemas/SecureLinkSort'
    SecureLinkSort:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Sorting'
        updatedAt:
          $ref: '#/components/schemas/Sorting'
        createdAt:
          $ref: '#/components/schemas/Sorting'
        archived:
          $ref: '#/components/schemas/Sorting'
  responses:
    LoginResponse:
      description: Returns a JWT Token and a Refresh Token on a successfull login
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginResponse'
    RefreshResponse:
      description: Returns a new JWT Token to refresh the old one
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefreshResponse'
    UserCreateResponse:
      description: Returns a User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserCreateResponse'
    UserGetAllResponse:
      description: Returns an array of User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetAllResponse'
    UserFindByIdResponse:
      description: Returns a User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserFindByIdResponse'
    UserSearchResponse:
      description: Returns a paginated array of User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserSearchResponse'
    UserPatchResponse:
      description: Returns a modified User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPatchResponse'
    UserUpdateResponse:
      description: Returns an updated User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserUpdateResponse'
    UserArchiveResponse:
      description: Returns a ResultHandler with the archived User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserArchiveResponse'
    HealthcheckResponse:
      description: Returns a ResultHandler with the latest build version number
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HealthcheckResponse'
    SuccessResultResponse:
      description: Successful request (no content)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultHandlerInterface'
    BadRequestResultResponse:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultHandlerInterface'
    MissingPermissionResultResponse:
      description: Forbidden. User don't have permission to complete action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultHandlerInterface'
    MissingTokenResultResponse:
      description: Missing JWT token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultHandlerInterface'
    NotFoundResultResponse:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultHandlerInterface'
    NotAcceptableResultResponse:
      description: Not Acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultHandlerInterface'
    InternalErrorResultResponse:
      description: Internal Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultHandlerInterface'
    AccessModelCreateResponse:
      description: Returns a AccessModel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelCreateResponse'
    AccessModelGetAllResponse:
      description: Returns an array of AccessModel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelGetAllResponse'
    AccessModelFindByIdResponse:
      description: Returns a AccessModel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelFindByIdResponse'
    AccessModelSearchResponse:
      description: Returns a paginated array of AccessModel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelSearchResponse'
    AccessModelPatchResponse:
      description: Returns a modified AccessModel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelPatchResponse'
    AccessModelUpdateResponse:
      description: Returns an updated AccessModel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelUpdateResponse'
    AccessModelArchiveResponse:
      description: Returns a ResultHandler with the archived AccessModel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelArchiveResponse'
    AccessScopeCreateResponse:
      description: Returns a AccessScope
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopeCreateResponse'
    AccessScopeGetAllResponse:
      description: Returns an array of AccessScope
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopeGetAllResponse'
    AccessScopeFindByIdResponse:
      description: Returns a AccessScope
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopeFindByIdResponse'
    AccessScopeSearchResponse:
      description: Returns a paginated array of AccessScope
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopeSearchResponse'
    AccessScopePatchResponse:
      description: Returns a modified AccessScope
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopePatchResponse'
    AccessScopeUpdateResponse:
      description: Returns an updated AccessScope
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopeUpdateResponse'
    AccessScopeArchiveResponse:
      description: Returns a ResultHandler with the archived AccessScope
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopeArchiveResponse'
    PropertyControlLinkCreateResponse:
      description: Returns a PropertyControlLink
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkCreateResponse'
    PropertyControlLinkGetAllResponse:
      description: Returns an array of PropertyControlLink
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkGetAllResponse'
    PropertyControlLinkFindByIdResponse:
      description: Returns a PropertyControlLink
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkFindByIdResponse'
    PropertyControlLinkSearchResponse:
      description: Returns a paginated array of PropertyControlLink
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkSearchResponse'
    PropertyControlLinkPatchResponse:
      description: Returns a modified PropertyControlLink
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkPatchResponse'
    PropertyControlLinkUpdateResponse:
      description: Returns an updated PropertyControlLink
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkUpdateResponse'
    PropertyControlLinkArchiveResponse:
      description: Returns a ResultHandler with the archived PropertyControlLink
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkArchiveResponse'
    PropertyControlOptionCreateResponse:
      description: Returns a PropertyControlOption
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionCreateResponse'
    PropertyControlOptionGetAllResponse:
      description: Returns an array of PropertyControlOption
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionGetAllResponse'
    PropertyControlOptionFindByIdResponse:
      description: Returns a PropertyControlOption
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionFindByIdResponse'
    PropertyControlOptionSearchResponse:
      description: Returns a paginated array of PropertyControlOption
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionSearchResponse'
    PropertyControlOptionPatchResponse:
      description: Returns a modified PropertyControlOption
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionPatchResponse'
    PropertyControlOptionUpdateResponse:
      description: Returns an updated PropertyControlOption
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionUpdateResponse'
    PropertyControlOptionArchiveResponse:
      description: Returns a ResultHandler with the archived PropertyControlOption
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionArchiveResponse'
    PropertyControlCreateResponse:
      description: Returns a PropertyControl
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlCreateResponse'
    PropertyControlGetAllResponse:
      description: Returns an array of PropertyControl
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlGetAllResponse'
    PropertyControlFindByIdResponse:
      description: Returns a PropertyControl
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlFindByIdResponse'
    PropertyControlSearchResponse:
      description: Returns a paginated array of PropertyControl
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlSearchResponse'
    PropertyControlPatchResponse:
      description: Returns a modified PropertyControl
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlPatchResponse'
    PropertyControlUpdateResponse:
      description: Returns an updated PropertyControl
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlUpdateResponse'
    PropertyControlArchiveResponse:
      description: Returns a ResultHandler with the archived PropertyControl
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlArchiveResponse'
    SecureLinkFindByTokenResponse:
      description: Returns a SecureLink
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecureLinkFindByTokenResponse'
    SecureLinkArchiveResponse:
      description: Returns a ResultHandler with the archived SecureLink
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecureLinkArchiveResponse'
  requestBodies:
    LoginRequestBody:
      description: Body needed to login
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginRequestBody'
    RefreshTokenRequestBody:
      description: Body needed to refresh the Jwt Token
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefreshTokenRequestBody'
    UserCreateRequestBody:
      description: Body needed to create a User
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserCreate'
    UserSearchRequestBody:
      description: Body needed to search Users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserSearchRequestBody'
    UserPatchRequestBody:
      description: Body needed to modify a User
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPatch'
    UserUpdateRequestBody:
      description: Body needed to update a User
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserUpdate'
    AccessModelCreateRequestBody:
      description: Body needed to create a AccessModel
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelCreate'
    AccessModelSearchRequestBody:
      description: Body needed to search AccessModels
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelSearchRequestBody'
    AccessModelPatchRequestBody:
      description: Body needed to modify a AccessModel
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelPatch'
    AccessModelUpdateRequestBody:
      description: Body needed to update a AccessModel
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelUpdate'
    AccessModelPopulateRequestBody:
      description: Body needed populate fields in AccessModel
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessModelPopulateRequestBody'
    AccessScopeCreateRequestBody:
      description: Body needed to create a AccessScope
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopeCreate'
    AccessScopeSearchRequestBody:
      description: Body needed to search AccessScopes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopeSearchRequestBody'
    AccessScopePatchRequestBody:
      description: Body needed to modify a AccessScope
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopePatch'
    AccessScopeUpdateRequestBody:
      description: Body needed to update a AccessScope
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessScopeUpdate'
    PropertyControlLinkCreateRequestBody:
      description: Body needed to create a PropertyControlLink
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkCreate'
    PropertyControlLinkSearchRequestBody:
      description: Body needed to search PropertyControlLinks
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkSearchRequestBody'
    PropertyControlLinkPatchRequestBody:
      description: Body needed to modify a PropertyControlLink
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkPatch'
    PropertyControlLinkUpdateRequestBody:
      description: Body needed to update a PropertyControlLink
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkUpdate'
    PropertyControlLinkPopulateRequestBody:
      description: Body needed populate fields in PropertyControlLink
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlLinkPopulateRequestBody'
    PropertyControlOptionCreateRequestBody:
      description: Body needed to create a PropertyControlOption
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionCreate'
    PropertyControlOptionSearchRequestBody:
      description: Body needed to search PropertyControlOptions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionSearchRequestBody'
    PropertyControlOptionPatchRequestBody:
      description: Body needed to modify a PropertyControlOption
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionPatch'
    PropertyControlOptionUpdateRequestBody:
      description: Body needed to update a PropertyControlOption
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlOptionUpdate'
    PropertyControlCreateRequestBody:
      description: Body needed to create a PropertyControl
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlCreate'
    PropertyControlSearchRequestBody:
      description: Body needed to search PropertyControls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlSearchRequestBody'
    PropertyControlPatchRequestBody:
      description: Body needed to modify a PropertyControl
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlPatch'
    PropertyControlUpdateRequestBody:
      description: Body needed to update a PropertyControl
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlUpdate'
    PropertyControlPopulateRequestBody:
      description: Body needed populate fields in PropertyControl
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropertyControlPopulateRequestBody'
  parameters:
    UserId:
      name: id
      description: User's Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ObjectID'
    IsUserDryRun:
      name: isDryRun
      description: Should this request be ran as a dry run (no save)
      in: query
      required: false
      schema:
        type: boolean
    IsUserArchived:
      name: isArchived
      description: Get archived User
      in: query
      required: false
      schema:
        type: boolean
    AccessModelId:
      name: id
      description: AccessModel's Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ObjectID'
    IsAccessModelDryRun:
      name: isDryRun
      description: Should this request be ran as a dry run (no save)
      in: query
      required: false
      schema:
        type: boolean
    IsAccessModelArchived:
      name: isArchived
      description: Get archived AccessModel
      in: query
      required: false
      schema:
        type: boolean
    AccessScopeId:
      name: id
      description: AccessScope's Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ObjectID'
    IsAccessScopeDryRun:
      name: isDryRun
      description: Should this request be ran as a dry run (no save)
      in: query
      required: false
      schema:
        type: boolean
    IsAccessScopeArchived:
      name: isArchived
      description: Get archived AccessScope
      in: query
      required: false
      schema:
        type: boolean
    PropertyControlLinkId:
      name: id
      description: PropertyControlLink's Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ObjectID'
    IsPropertyControlLinkDryRun:
      name: isDryRun
      description: Should this request be ran as a dry run (no save)
      in: query
      required: false
      schema:
        type: boolean
    IsPropertyControlLinkArchived:
      name: isArchived
      description: Get archived PropertyControlLink
      in: query
      required: false
      schema:
        type: boolean
    PropertyControlOptionId:
      name: id
      description: PropertyControlOption's Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ObjectID'
    IsPropertyControlOptionDryRun:
      name: isDryRun
      description: Should this request be ran as a dry run (no save)
      in: query
      required: false
      schema:
        type: boolean
    IsPropertyControlOptionArchived:
      name: isArchived
      description: Get archived PropertyControlOption
      in: query
      required: false
      schema:
        type: boolean
    PropertyControlId:
      name: id
      description: PropertyControl's Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ObjectID'
    IsPropertyControlDryRun:
      name: isDryRun
      description: Should this request be ran as a dry run (no save)
      in: query
      required: false
      schema:
        type: boolean
    IsPropertyControlArchived:
      name: isArchived
      description: Get archived PropertyControl
      in: query
      required: false
      schema:
        type: boolean
    SecureLinkId:
      name: id
      description: SecureLink's Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ObjectID'
    SecureLinkToken:
      name: token
      description: SecureLink's Token
      in: path
      required: true
      schema:
        type: string
